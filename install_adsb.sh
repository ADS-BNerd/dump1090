#!/bin/bash

# Update and upgrade the system
sudo apt-get update && sudo apt-get upgrade -y

# Install necessary packages
sudo apt-get install -y git cmake build-essential libusb-1.0-0-dev pkg-config libncurses5-dev

# Clone and build rtl-sdr
git clone https://github.com/osmocom/rtl-sdr.git
cd rtl-sdr
mkdir build
cd build
cmake ../ -DINSTALL_UDEV_RULES=ON
make
sudo make install
sudo ldconfig

# Blacklist conflicting module and reboot
echo "blacklist dvb_usb_rtl28xxu" | sudo tee -a /etc/modprobe.d/blacklist-rtl.conf


# Clone and build dump1090
cd ~
git clone https://github.com/flightaware/dump1090.git
cd dump1090
make
sudo cp dump1090 /usr/local/bin/


# Create directory for JSON data
mkdir -p /home/adsbmin/dump1090/data

# Create the Python script for sending data to API
cat <<EOF > /home/adsbmin/send_to_api.py
import requests
import json
import time
import os

# API endpoint and key
API_ENDPOINT = "https://feed.adsbnerd.com/feed"
API_KEY = "YOUR_API_KEY_HERE"

# Path to the JSON file generated by dump1090
JSON_FILE = "/home/adsbmin/dump1090/data/aircraft.json"

# HTTP headers including the API key
headers = {
    'Content-Type': 'application/json',
    'x-api-key': API_KEY
}

# Function to send data to the API
def send_dump1090_data():
    try:
        if os.path.exists(JSON_FILE) and os.path.getsize(JSON_FILE) > 0:
            with open(JSON_FILE, 'r') as file:
                data = json.load(file)
                if 'aircraft' in data:
                    for aircraft in data['aircraft']:
                        # Ensure all necessary fields are included, excluding username and timestamp
                        aircraft_data = {
                            "flightNumber": aircraft.get("flight", None),
                            "hex": aircraft.get("hex", None),
                            "squawk": aircraft.get("squawk", None),
                            "altitude": aircraft.get("alt_baro", None),
                            "speed": aircraft.get("gs", None),
                            "heading": aircraft.get("track", None),
                            "latitude": aircraft.get("lat", None),
                            "longitude": aircraft.get("lon", None),
                            "vertRate": aircraft.get("baro_rate", None),
                            "distance": None,
                            "rssi": aircraft.get("rssi", None),
                            "messages": aircraft.get("messages", None),
                            "seen": aircraft.get("seen", None),
                            "emergency": aircraft.get("emergency", None) != "none",
                            "category": aircraft.get("category", None),
                            "registration": None,
                            "departure": None,
                            "arrival": None,
                            "status": None
                        }
                        
                        # Send the aircraft data to your API
                        response = requests.post(API_ENDPOINT, json=aircraft_data, headers=headers)
                        print(f"Data sent for aircraft {aircraft.get('hex', 'unknown')}: {response.status_code} {response.text}")
                else:
                    print("No aircraft data found in JSON file.")
        else:
            print("JSON file is empty or does not exist.")

    except json.JSONDecodeError as json_error:
        print(f"Error decoding JSON: {json_error}")
    except Exception as error:
        print(f"Error sending data: {error}")

# Send data every 10 seconds
while True:
    send_dump1090_data()
    time.sleep(10)
EOF

# Replace the placeholder with the actual API key
sed -i "s/YOUR_API_KEY_HERE/$1/g" /home/adsbmin/send_to_api.py

# Make the Python script executable
chmod +x /home/adsbmin/send_to_api.py

# Create the systemd service file for the Python script
sudo bash -c 'cat <<EOF > /etc/systemd/system/dump1090-to-api.service
[Unit]
Description=Send dump1090 data to API
After=network.target

[Service]
ExecStart=/usr/bin/python3 /home/adsbmin/send_to_api.py
WorkingDirectory=/home/adsbmin
User=adsbmin
Restart=always

[Install]
WantedBy=multi-user.target
EOF'

# Create the systemd service file for dump1090
sudo bash -c 'cat <<EOF > /etc/systemd/system/dump1090.service
[Unit]
Description=dump1090 ADS-B receiver
After=network.target

[Service]
ExecStart=/usr/local/bin/dump1090 --net --write-json /home/adsbmin/dump1090/data
WorkingDirectory=/home/adsbmin/dump1090
RestartSec=10s
StartLimitBurst=5
StartLimitIntervalSec=30
User=adsbmin

[Install]
WantedBy=multi-user.target
EOF'

# Reload systemd and enable the services
sudo systemctl daemon-reload
sudo systemctl enable dump1090-to-api
sudo systemctl enable dump1090
mkdir -p /home/adsbmin/dump1090/data
sudo chown -R adsbmin:adsbmin /home/adsbmin/dump1090/data

sudo reboot now
